Last Lecture
1 Services
	- It is simple class 
	- u can write any BL in service
	- we can reuse that service any component
	- we can use code Maintainabilty
	- we can connect our backend server to frontend
	implementation of service using DI 
	
	export class CourseService{
		private course:string[]=[...]
		
		getCourser(){
			return this.course;
		}
	}
	
	course.ts
		myCourse:string[]=[];
		constructor(private service:CourseService){
			//let service=new CourseService();
		//	this.myCourse=service.getCourse();
			
		}
		
		ngOnInit(){
			this.myCourse=this.service.getCourse();
		}
		
		app.module.ts
		providers:[CourseService]
	
	
2 Dependancy injection
	- DI creates a singlton Object
	- Angular creates a single instance of that resourse & that instance we can use any where in our application 

Today's Lecture
1 Http Protocol
	- it is set of rule 
2 Http Mthods
	- get => to fetch a data from backend to frontend
	- Post => To send a data from frontend to backend 
	- Put => to Update a particular data
	- delete => to delete a particular data 
3 Http Request-resposne
		Http Request has 2 parts 
			1 Http Header
				- ip
				- http Method
				- auth
				- Content Type	
					- img
					- pdf
					- text
					- audio
					- video
					- html 
				- date 
			2 Http Body
				- Data
				   - Json format/xml Format/html format 
		
		Http Response 
			1 Http Header
				- ip
				- http Method
				- auth
				- Content Type	
					- img
					- pdf
					- text
					- audio
					- video
					- html 
				- date
				- Status code
					2xx=> success,ok 
					3xx=> Redirection purpose 
					4xx=> Client side
					5xx=> server side 
					
			2 Http Body
				- Data
				   - Json format/xml Format/html format 
		
		
	
4 HttpClientModule
	
	app.module.ts
	import: []
5 https://jsonplaceholder.typicode.com/posts

	- It is a fake service 
	- u send any data from front end post ,put,delete it is not store in database but it gives a response to ur request 
	
	
6 Http get







	

	
	

	

	

























